include required(classpath("application"))

#
# Prerequisite:
#     virtualenv needs to be setup under ~
#     $ virtualenv ~/venv && pip install requirements.txt
#

#webservice {
#  port = 8000
#}

backend.default = JTM

backend {
  providers {
    JTM {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
          String time = "00:30:00"
          Int cpu = 4
          String mem = "0G"
          String cluster = "cori"
          String poolname = "aim2_test_pool"
          Int node = 1
          Int nwpn = 1
          String constraint = "haswell"
        """

        submit = """
          source /global/cfs/projectdirs/m3408/aim2/metagenome/venv/bin/activate_jtm.sh && \
          jtm-submit -cr '/bin/bash ${script}' \
                     -cl ${cluster} \
                     -t ${time} \
                     -c ${cpu} \
                     -m ${mem} \
                     -p ${poolname} \
                     -C ${constraint} \
                     -N ${node} \
                     -nwpn ${nwpn} \
                     -jid ${job_name}
        """
        kill = "source /global/cfs/projectdirs/m3408/aim2/metagenome/venv/bin/activate_jtm.sh && jtm-kill ${job_id}"
        check-alive = "source /global/cfs/projectdirs/m3408/aim2/metagenome/venv/bin/activate_jtm.sh && jtm-isalive ${job_id}"
        job-id-regex = "JTM task ID (\\d+)"
      }
    }

    SLURM {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
          # Int runtime_minutes = 600
          # Int cpus = 2
          # Int requested_memory_mb_per_core = 8000
          # String queue = "short"
        """

        submit = """
            sbatch -t 00:30:00 -c 1 --job-name=cromwell-test --mem=32G -A fungalp \
            --wrap "/bin/bash ${script}"
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "Submitted batch job (\\d+).*"
      }
    }
  }
}
